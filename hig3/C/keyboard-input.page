<page xmlns="http://projectmallard.org/1.0/"
      type="topic"
      id="keyboard-input">

  <info>
    <link type="guide" xref="essentials" group="keyboard-input"/>   
    <credit type="author">
      <name>Allan Day</name>
      <email>aday@gnome.org</email>
    </credit>
    <license href="http://creativecommons.org/licenses/by-sa/4.0/">
      <p>This work is licensed under a
      <link href="http://creativecommons.org/licenses/by-sa/4.0/">Creative
      Commons Attribution-Share Alike 4.0 International License</link>.</p>
    </license>
    <desc>Keyboard navigation, access and shortcut keys.</desc>  
  </info>

<title>Keyboard Input</title>

<p>Keyboards are a basic input device for GNOME 3, so it is important that you design your application with them in mind. The keyboard is also important for visually-impaired people or those with mobility impairments.</p>

<section id="keyboard-navigation">
<title>Keyboard Navigation</title>

<p>Ensure that all the functionality provided by your application can be accessed using a keyboard, including toolbars, links and buttons. Trying to use your application only with a keyboard is a great way to test this.</p>

<list>
<item><p>The tab key is the standard way of navigating through a GNOME user interface using the keyboard. Make sure that all the parts of your application can be accessed in this manner.</p></item>
<item><p>Use a logical keyboard navigation order. When navigating around a window with the Tab key, keyboard focus should move between controls in a predictable order. In Western locales, this is normally left to right and top to bottom.</p></item>
<item><p>Ensure correct tab order for controls whose enabled state is dependent on check box, radio button or toggle button state. When such a button is selected, all its dependent controls should be enabled, and all the dependent controls of any other button in the group should be disabled. When the user selects a check box, radio button or toggle button that has dependent controls, do not automatically give focus to the first dependent control, but instead leave the focus on the button.</p></item>
</list>

</section>

<section id="access-keys">
<title>Access Keys</title>

<p>Access keys allow someone to operate labelled controls by using the Alt modifier key.</p>

<list>
<item><p>Give all labelled components an access key (underlined letter), with the exception of toolbar controls which would use up too many access key combinations.</p></item>
<item><p>Choose access keys so that they are easy to remember. Normally this means using the first letter of the label. However, in complex windows, the choice can become more difficult. Here are some simple rules:</p></item>
<list>
<item><p>Assign access keys to the most frequently-used controls first. If it's not clear which controls will be the most frequently used, assign access keys from left to right, top to bottom (for Western locales).</p></item>
<item><p>Use the first letter of the label, or of one of its other words if it has more than one. If another letter provides a better association (e.g. "x" in Extra Large) however, consider using that letter instead.</p></item>
<item><p>If the first letter is not available, choose an easy to remember consonant from the label, for example, "p" in Replace.</p></item>
<item><p>If no such consonants are available, choose any available vowel from the label.</p></item>
</list>
<item><p>If duplication of access keys in a window is unavoidable, you should still refrain from duplicating the access keys for any of these buttons that appear in the same window: OK, Cancel, Close, Apply or Help. GTK+ handles duplicated access keys by cycling the focus between the controls with the same access key.</p></item>
<item><p>It is better not to assign access keys to "thin" letters (such as lowercase i or l), or letters with descenders (such as lowercase g or y) unless it is unavoidable. The underline does not show up very well on those characters in some fonts.</p></item>
<item><p>Applications using a non-Roman writing system in conjunction with a standard keyboard can have control labels prefixed with Roman characters as access keys.</p></item>
<item><p>Be aware of the fact that access keys have to be translated together with the strings that they are taken from, so even if there are no conflicts in your native language, they may occur in translations.</p></item>
<item><p>GTK+ only shows the underlines for access keys when the user presses the Alt key, to avoid cluttering up dialogs with too many underlines.</p></item>
</list>

</section>

<section id="shortcut-keys">
<title>Shortcut Keys</title>

<p>Shortcut keys are a good way to provide quick and convenient access to common operations.</p>

<p>Guidance on assigning shortcut keys:</p>

<list>
<item><p>Use the standard GNOME shortcut keys (see below) if your application supports those functions. This ensures consistency between GNOME applications and aids discoverability.
Do not assign system-level shortcut keys. These use the Super (sometimes knows as the windows key) key as a modifier.</p></item>
<item><p>Only assign shortcut keys to the most commonly-used actions in your application. Do not try to assign a keyboard shortcut to everything.</p></item>
<item><p>Do not use the standard GNOME application shortcut keys for different functions. This helps to reinforce consistency between all GNOME applications.</p></item>
<item><p>Use Ctrl+letter in preference to other combinations when choosing new shortcut keys and Shift+Ctrl+letter for functions that reverse or extend another function. For example, Ctrl+Z and Shift+Ctrl+Z for Undo and Redo.</p></item>
<item><p>New shortcut keys should be as mnemonic as possible, as these will be easier to learn and remember. For example, Ctrl+E would be a good shortcut for a menu item called Edit Page.</p></item>
<item><p>Shortcuts that can be easily used with one hand are preferable for common operations.</p></item>
<item><p>Do not use Alt+key combinations for shortcut keys, as these may conflict with access keys.</p></item>
</list>

</section>

<section id="standard-shortcut-keys">
<title>Standard GNOME Shortcut Keys</title>

<p>Include these where you can:</p>

</section>

<section id="system-shortcut-keys">
<title>System Reserved Shortcut Keys</title>

</section>

</page>
