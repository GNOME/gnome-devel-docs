<?xml version='1.0' encoding='UTF-8'?>
<page xmlns="http://projectmallard.org/1.0/"
      xmlns:xi="http://www.w3.org/2001/XInclude"
      type="guide" style="task"
      id="label.py">

  <info>
    <title type="text">Label (Python)</title>
    <link type="seealso" xref="properties.py" />
    <link type="seealso" xref="strings.py" />
    <link type="next" xref="properties.py" />
    <revision version="0.3" date="2013-03-04" status="draft"/>

    <credit type="author copyright">
      <name>Marta Maria Casetti</name>
      <email>mmcasetti@gmail.com</email>
      <years>2012, 2013</years>
    </credit>
    <credit type="author">
      <name>Sebastian P&#246;lsterl</name>
      <email>sebp@k-d-w.org</email>
      <years>2012</years>
    </credit>

    <desc>A widget that displays a small to medium amount of text</desc>
  </info>

  <title>Label</title>

  <synopsis><p>We can write some text inside a label, and add it to a window.
  </p></synopsis>

  <links type="section" />

  <section id="example">
  <title>An example</title>

  <p>An example of code for a simple window with a label inside it.</p>

  <code mime="text/x-python" style="numbered"><xi:include href="samples/label.py" parse="text"><xi:fallback/></xi:include></code>

  <p>If you run this code, you should obtain something like the following:</p>

  <media type="image" mime="image/png" src="media/label.png"/>
  
  </section>
  
  <section id="in-depth">
  <title>A more in-depth look</title>
  
  <p>As in the <link xref="image.py"/> example, we create a window and we add 
  something to it - in this case, a label for which in line 11 we set the text.
  </p>

  <p>Analogously to what we have seen in the <link xref="image.py"/> example, 
  another way to obtain the above is to create the label as an instance of 
  another class and add it to the instance of <code>MyWindow</code> in the 
  <code>do_activate(self)</code> method.</p>
  
  <code mime="text/x-python" style="numbered"><xi:include href="samples/label2.py" parse="text"><xi:fallback/></xi:include></code>

  <p>The method <code>set_line_wrap(True)</code> breaks lines if the text of 
  the label exceeds the size of the widget.</p>

  <p>The method <code>set_justify(Gtk.Justification.LEFT)</code> 
  (alternatively: <code>Gtk.Justification.RIGHT</code>, 
  <code>Gtk.Justification.CENTER</code>, <code>Gtk.Justification.FILL</code>) 
  sets the alignment of the lines in the text of the label relative to each 
  other. The method has no effect on a single-line label.</p>

  <p>For decorated text we can use <code>set_markup(<var>"text"</var>)</code>, 
  using the 
  <link href="http://developer.gnome.org/pango/stable/PangoMarkupFormat.html">Pango 
  Markup Language</link>. An example:</p>
      <code mime="text/x-python"><![CDATA[
label.set_markup("Text can be <small>small</small>, <big>big</big>, "
                 "<b>bold</b>, <i>italic</i> and even point to somewhere "
                 "in the <a href=\"http://www.gtk.org\" "
                 "title=\"Click to find out more\">internets</a>.")]]></code>

  </section>

  <section id="exercises">
  
  <p>Try to produce a multiline label, possibly using the Pango Markup Language.</p>
  
  </section>

  <section id="references">
  <title>API References</title>
  <p>In this sample we used the following:</p>
  <list>
    <item><p><link href="http://developer.gnome.org/gtk3/unstable/GtkLabel.html">GtkLabel</link></p></item>
    <item><p><link href="http://developer.gnome.org/gtk3/unstable/GtkWindow.html">GtkWindow</link></p></item>
  </list>
  </section>
</page>
