<?xml version="1.0"?>
<!DOCTYPE article PUBLIC "-//OASIS//DTD DocBook XML V4.1.2//EN" 
"http://www.oasis-open.org/docbook/xml/4.1.2/docbookx.dtd" [
  <!ENTITY date "September 2003">
  <!ENTITY legal SYSTEM "legal.xml">
  <!ENTITY manrevision "1.0">
<!ENTITY title "Building From a Tarball for the Solaris Operating Environment">
]>
<article id="index" lang="en">
<!-- please do not change the id; for translations, change lang to -->
<!-- appropriate code -->
  <articleinfo> 
	 <title>&title; V&manrevision;</title> 
	 <copyright> 
		<year>2003</year> 
		<holder>Sun Microsystems</holder> 
	 </copyright>
<!-- translators: uncomment this:

  <copyright>
   <year>2002</year>
   <holder>ME-THE-TRANSLATOR (Latin translation)</holder>
  </copyright>

   -->
<!-- An address can be added to the publisher information.  If a role is 
     not specified, the publisher/author is the same for all versions of the 
     document.  -->
	 <publisher> 
		<publishername> GNOME Documentation Project</publishername> 
	 </publisher> &legal;
<!-- This file  contains link to license for the documentation (GNU FDL), and 
     other legal stuff such as "NO WARRANTY" statement. Please do not change 
     any of this. -->
	 <authorgroup> 
		<author> 
		  <firstname>Sun</firstname> 
		  <surname>Microsystems</surname> 
		  <affiliation> 
			 <orgname>GNOME Documentation Project</orgname> 
			 <address> <email>gnome-doc-list@gnome.org</email> </address> 
		  </affiliation> 
		</author> 
		 
      <!-- This is appropriate place for other contributors: translators,
           maintainers,  etc. Commented out by default.
           <othercredit role="translator">
	     <firstname>Latin</firstname> 
	     <surname>Translator 1</surname> 
	     <affiliation> 
	       <orgname>Latin Translation Team</orgname> 
	       <address> <email>translator@gnome.org</email> </address> 
	     </affiliation>
	     <contrib>Latin translation</contrib>
           </othercredit>
-->
	 </authorgroup> 
	 <revhistory> 
		<revision> 
		  <revnumber>&title; V&manrevision;</revnumber> 
		  <date>&date;</date> 
		  <revdescription> 
			 <para role="author">
				Sun Microsystems <email>gnome-doc-list@gnome.org</email>
			 </para>
			 <para role="publisher">
				GNOME Documentation Project
			 </para>
		  </revdescription> 
		</revision> 
	 </revhistory> 
	 <releaseinfo> This manual describes how to build tarballs from the GNOME
		2.0 Desktop and higher, on the <trademark>Solaris</trademark> 8 operating environment and the Solaris 9 operating environment.</releaseinfo> 
	 <legalnotice> 
		<title>Feedback</title> 
		<para>
		  To report a bug or make a suggestion regarding this manual, follow the
		  directions in the 
		  <ulink url="ghelp:gnome-feedback" type="help">GNOME Feedback
			 Page</ulink>. 
		</para>
	 </legalnotice> 
  </articleinfo> 
  <indexterm> 
	 <primary>Tarball build</primary> 
  </indexterm> 
<!-- ============= Document Body ============================= -->
  <sect1 id="solaris-tarball-introduction"> 
	 <title>Who This Is Information For</title> 
	 <para>
		This information is for developers who want to download tarballs from the
		GNOME website, then build the tarballs on systems running the
		<trademark>Solaris</trademark> 8 operating environment, and the Solaris 9
		operating environment.
	 </para>
  </sect1> 
  <sect1 id="tarball-build-1">
	 <title>Before You Download and Build a Tarball</title>
	 <para>
		Before you download and build a tarball of a GNOME application, you need
		to perform the following steps:
	 </para>
	 <variablelist>
		<varlistentry>
		  <term>Check that the development packages are installed on your
			 system</term>
		  <listitem>
			 <para>
				You need to ensure that the development packages are installed in
				the <filename>/opt/sfw</filename> area. Perform the following command to
				display information about the installation status of the development package:
			 </para>
			 <para>
				<prompt>%</prompt> <userinput>pkginfo
				SUNWgnome-base-libs-devel</userinput>
			 </para>
		  </listitem>
		</varlistentry>
		<varlistentry>
		  <term>Set up the build environment</term>
		  <listitem>
			 <para>
				Use the following packages contained on the companion CD delivered
				with the CD for the Solaris operating environment:
			 </para>
			 <itemizedlist>
				<listitem>
				  <para>
					 m4-1.4
				  </para>
				</listitem>
				<listitem>
				  <para>
					 autoconf-2.53
				  </para>
				</listitem>
				<listitem>
				  <para>
					 automake-1.6.1
				  </para>
				</listitem>
				<listitem>
				  <para>
					 gcmn-1.0
				  </para>
				</listitem>
				<listitem>
				  <para>
					 gmake-3.79.1
				  </para>
				</listitem>
				<listitem>
				  <para>
					 libtool-1.4.2
				  </para>
				</listitem>
			 </itemizedlist>
			 <para>
				You can also download the build environment packages from the 
				<ulink
				 url="http://wwws.sun.com/software/solaris/freeware/">freeware website</ulink>
				hosted by Sun Microsystems. You must register on the freeware website before
				you can download the packages.
			 </para>
			 <para>
				Please note the listed order of the packages, as some of the
				packages have dependencies. Install the packages as instructed on the freeware
				website.
			 </para>
		  </listitem>
		</varlistentry>
		<varlistentry>
		  <term>Setup environmental variables</term>
		  <listitem>
			 <para>
				You should set the following environmental variables:
			 </para>
			 <itemizedlist>
				<listitem>
				  <para>
					 <filename>DE_HOME /opt/sfw</filename>
				  </para>
				</listitem>
				<listitem>
				  <para>
					 <filename>PATH /opt/sfw/bin:/usr/sfw/bin:$PATH</filename>
				  </para>
				</listitem>
				<listitem>
				  <para>
					 <filename>LD_LIBRARY_PATH
					 /opt/sfw/lib:/usr/sfw/lib:$LD_LIBRARY_PATH</filename>
				  </para>
				</listitem>
				<listitem>
				  <para>
					 <filename>CC cc</filename>
				  </para>
				</listitem>
				<listitem>
				  <para>
					 <filename>CPPFLAGS -I/usr/include -I/usr/sfw/include</filename>
				  </para>
				</listitem>
				<listitem>
				  <para>
					 <filename>CFLAGS -xO4 -xspace -xarch=v8a -xstrconst
					 -Wl,-zignore -I/usr/include</filename>
				  </para>
				</listitem>
				<listitem>
				  <para>
					 <filename>LDFLAGS -i -xO4 -xspace -xarch=v8a -L/usr/sfw/lib
					 -R/usr/sfw/lib</filename>
				  </para>
				</listitem>
				<listitem>
				  <para>
					 <filename>PKG_CONFIG_PATH /usr/lib/pkgconfig</filename>
				  </para>
				</listitem>
			 </itemizedlist>
		  </listitem>
		</varlistentry>
		<varlistentry>
		  <term>Verify the Correct Version of the Forte Compiler</term>
		  <listitem>
			 <para>
				Forte 6 update 2, or FD 7 (C 5.4) are the required versions of
				Forte to ensure GNOME builds.
			 </para>
		  </listitem>
		</varlistentry>
	 </variablelist>
  </sect1>
  <sect1 id="tarball-build-2">
	 <title>Downloading the Tarball and Building the Application</title>
	 <para>
		When you have completed all of the steps in
		<xref linkend="tarball-build-1"/>, then perform the following steps to download
		the tarball and build the application:
	 </para>
	 <variablelist>
		<varlistentry>
		  <term>Download the tarball</term>
		  <listitem>
			 <para>
				Download and unpack a source tarball from the 
				<ulink url="http://www.gnome.org/">GNOME website</ulink> , using
				the Get GNOME link.
			 </para>
		  </listitem>
		</varlistentry>
		<varlistentry>
		  <term>Configure and compile the application</term>
		  <listitem>
			 <para>
				Run the following commands:
			 </para>
			 <orderedlist>
				<listitem>
				  <para>
					 <prompt>%</prompt><userinput>./configure
					 --prefix=/usr</userinput>
				  </para>
				</listitem>
				<listitem>
				  <para>
					 <prompt>%</prompt><userinput>make</userinput>
				  </para>
				</listitem>
			 </orderedlist>
		  </listitem>
		</varlistentry>
		<varlistentry>
		  <term>Check dependencies</term>
		  <listitem>
			 <para>
				Some binaries might have dependencies on other binaries that are
				not part of the GNOME Desktop or of the GNOME developer pack. In these cases,
				you need to download and build the dependency files. Some tarballs contain a
				<filename>DEPENDS</filename> file that lists the dependencies. If there is
				<filename>DEPENDS</filename> file, the 
				<command><?xm-replace_text {command}?></command> script informs you
				that a specific binary or library is missing.
			 </para>
		  </listitem>
		</varlistentry>
	 </variablelist>
  </sect1>
</article> 
