<?xml version="1.0" encoding="UTF-8"?>

<chapter id="layout">

<title>Visual Design</title>

<!-- TODO:
- More than any other section this needs to be liberally sprinkled with examples
-->
    <sect1 id="layout-appearance">
      <title>Layout and Appearance</title>
      
      <para>The layout of a user interface is important both because it communicates the relationships between elements, and because an aesthetically-pleasing interface is more pleasant to use.</para>
      
      <para>Users in western locales are accustomed to reading from the top-left to the bottom-right. Generally, therefore, lay out your interface so that the first element the user is meant to encounter is in the top-left, and the last in the bottom-right.</para>
      
      <para>Bear in mind that when localized for non-western locales, interfaces may be reversed so that they read from right to left.<!-- Does it get more complex than this? --></para>

      <sect2 id="layout-spacing">
	
	<title>Spacing</title>
		
	<para>Provide adequate space between controls and groups of controls. This <wordasword>white space</wordasword> will make it easier for the user to find the information they need.</para>

	<para>Recommendations:</para>
	
	<itemizedlist>
	  <listitem><para>Allow 3 pixels of padding around every control within the same visual or functional group.  To achieve this:</para>
	    <itemizedlist>
	      
	      <listitem><para>Set the default border width and spacings for GtkTables, GtkVBoxes and GtkHBoxes to 3 pixels</para></listitem>
	  
	      <listitem><para>Set the default border width of all other controls to 3 pixels</para></listitem>
	  
	      <listitem><para>If a control is the only child of a GtkTable, GtkVBox or GtkHBox cell, set the control's border width to zero.</para></listitem>
	    </itemizedlist>
	  </listitem>
	  
	  
	  <listitem><para>Allow 9 pixels of padding around every complete visual or functional group of controls (e.g. a framed group of checkboxes).  To achieve this, set the default border width and spacings width for GtkTables, GtkVBoxes and GtkHBoxes whose cells contain complete functional groups to 9 pixels.</para></listitem>
	  
	  <listitem><para>FIXME: Spacing around the edges of a dialog/frame/notebook page?</para></listitem>
	  
	</itemizedlist>

	<para>FIXME:Annotated example of dialog showing correct spacing</para>
	
      </sect2>

      <sect2 id="layout-grouping-separators">
	
	<title>Grouping and Separators</title>
	
	<para>Break long lists of choices into smaller groups.  For lists of less than about eight items, use radio buttons or check boxes.  For longer lists, use a list control or option menu.</para>
	
	<para>You can visually divide controls into groups in different ways. Try using a greater amount of white space between groups of elements first.  However, if the layout of the groups is complex, you may have to use separators and frames to draw lines and boxes between elements. </para>
	
	<para>Clearly show the extent of groups of related controls, like radio buttons, using these methods as appropriate.</para>
	
      </sect2>
      

      <sect2 id="layout-alignment">
	<title>Alignment</title>
	
	<para>The eye is very sensitive to aligned and unaligned objects.  If nothing lines up with anything else in a window, it will be very hard for the user to scan the contents and find the information they want.  Two things that almost line up, but not quite, are equally distracting.</para>

	<para>Recommendations:</para>
	<itemizedlist>
	  <listitem><para>Aim to minimize the number of alignment points in your window.  An alignment point is an imaginary vertical or horizontal line through your window with which touches the edge of one or more labels or controls in the window.</para>

	    <para>FIXME: example of dialogs showing alignment points</para>
	    
	  </listitem>
	  
	  <listitem><para>If the left or top edges of two controls almost line up, reposition one of them so that they line up exactly.</para></listitem>

	  <listitem><para>If the right or bottom edges of two controls almost line up, make the smaller control a little bigger so that they line up exactly.</para></listitem>

	  <listitem><para>Don't include a dialog's action buttons, such as <guibutton>OK</guibutton> and <guibutton>Cancel</guibutton>, when lining up objects in a dialog.  It's more important that these buttons are consistently sized and placed between dialogs than that they line up with anything in a particular dialog.</para></listitem>

	</itemizedlist>
	
	<para>Use GtkTables, GtkVBox and GtkHBox container widgets with consistent row, column and border sizes where possible. This will help ensure that a lot of this layout and alignment work is done for you automatically.</para>

      </sect2>
      
      <sect2 id="layout-labels">
	
	<title>Labelling</title>
	
	<para>Relationships between elements are usually indicated by their positions. Place labels consistently according to the type of control they relate to:</para>
	    
	<!-- CFB: I just copied in this figure from the accessibility guide... feel free to edit/delete as you see fit...-->
	
	<figure id="label-placement-example">
	  <title>Correct label placement for various UI elements</title>
	  <informaltable frame="all">
	    <tgroup cols="3" align="center">
	      <tbody>
		<row>
		  <entry valign="middle">
	          <mediaobject>
		      <imageobject>
			<imagedata fileref="images/label_above.png" format="PNG"/>
		    </imageobject>
		    <textobject>
		      <phrase>List control with label above</phrase>
		    </textobject>
		  </mediaobject>
	  List control with label above
	        </entry>
		  
		  <entry valign="middle">
	          <mediaobject>
		      <imageobject>
			<imagedata fileref="images/label_below.png" format="PNG"/>
		    </imageobject>
		    <textobject>
		      <phrase>Large file manager icon with label underneath</phrase>
		    </textobject>
		  </mediaobject>
	  Large file manager icon with label underneath
	        </entry>
		  
		  <entry valign="middle">
	          <mediaobject>
		      <imageobject>
			<imagedata fileref="images/label_right.png" format="PNG"/>
		    </imageobject>
		    <textobject>
		      <phrase>Small toolbar icon with label to its right</phrase>
		    </textobject>
		  </mediaobject>
	  Small toolbar icon with label to its right
	        </entry>
		  
		  <entry valign="middle">
         	  <mediaobject>
		      <imageobject>
			<imagedata fileref="images/label_left.png" format="PNG"/>
		    </imageobject>
		    <textobject>
		      <phrase>Spinbox control with label to its left</phrase>
		    </textobject>
		  </mediaobject>
	  Spinbox control with label to its left
        	</entry>
		</row>
	      </tbody>
	    </tgroup>
	  </informaltable>
	</figure>

	<para>Many widgets give you little or no choice about the positioning of the label, such as buttons or check boxes.  However, with text boxes, lists, option menus and others, it is up to you as the designer to choose the best position for the control's label.</para>

	<para>Recommendations:</para>

	<itemizedlist>
	  <listitem><para>FIXME: Left align except when it's better to right align :)</para></listitem>

	</itemizedlist>
	
      </sect2>
      
      
      <sect2 id="visual-balance">
	<title>Balance and Proportion</title>
	
	<para>Even if you choose all the right controls for your dialog, and arrange them in all the right groups, it still might not look quite right on the screen.  One possible reason for this is that you've got the &quot;visual balance&quot; wrong.</para>
	
	<para>Visual balance works like balancing weights.  Every control or group of controls in your window has a visual 'weight', depending on its overall size, color, and how much white space it includes.  Darker, larger areas are 'heavier'.  Paler, smaller areas are 'lighter'.  The more balanced your window is overall, the more comfortable users will feel when they look at it.</para>

	<para>FIXME: Example of unbalanced and balanced About dialog</para>

	<tip><title>Checking Visual Balance</title>
	  <para>There are two good ways to check if a window has good visual balance.  First, screw up your eyes just enough to hide the details of the window, and see if the light and dark areas seem to be equally distributed around the window.  Second, print out a screenshot of your dialog, and look at it in a mirror, again screwing up your eyes a little.  If it still looks balanced, it probably is.</para>
	</tip>

	<para>As with visual balance, people can feel uncomfortable if things look out of proportion.  In nature, there is a ratio called the golden ratio&mdash;about 1.6 to 1&mdash; that crops up all over the place from tree trunks to snail shells.  Artists and architects have known about this for thousands of years, and used it to create aesthetically-pleasing buildings and paintings.</para>

	<para>It also turns out that people are more comfortable looking at windows and dialogs whose dimensions stay within the golden ratio.  So, where possible, don't design windows that are more than about 50% longer in one dimension than they are in the other.</para>
	
      </sect2>
      
    </sect1>
    
    <!-- Colors, Fonts and Accessibility -->
    <sect1 id="colors-fonts">
      <title>Fonts and Text</title>
      
      <para>To a user with normal vision, textual output provides the majority of the information and feedback in most applications.  To a visually-impaired user who may not be able to see or understand any additional graphical output, clear textual output is critical.  It is therefore essential that you choose and position text carefully on the screen, and leave the choice of fonts and sizes to the user, to ensure that all users are able to use your application effectively.</para>
      
      <para>Don't mix lots of different fonts and sizes in your application, it will just look unprofessional and be harder to read.  If you need to use different fonts for different types of information, don't use more than two or three in the same window, and choose visually distinct rather than similar-looking fonts.  In general, you should always use fonts from the current theme, and specify relative rather than absolute font sizes.</para>
      
      <para>FIXME:examples</para>

      <para>Recommendations:</para>
      
      <itemizedlist>
	<listitem><para>Don't hard-code font styles and sizes. The user should be able to adjust all sizes and typefaces. If for some reason you cannot make this functionality available, never hardcode any font sizes smaller than 10 points.</para></listitem>
	
	<listitem><para>Don't use graphical backdrops or &quot;watermarks&quot; behind text, other than those specified by the user's chosen theme. Such images interfere with the contrast between the text and its background.  This can cause difficulty for users with visual impairments, who will therefore normally choose themes that always use plain backdrops.</para></listitem>
	
	<listitem><para>Position labels consistently throughout your application. This normally means immediately below large icons, immediately to the
right of small icons, and immediately above or to the left of other controls. See <xref linkend="label-placement-example"/>.</para></listitem>

	<listitem><para>When you use static text to label a control, ensure that the label immediately precedes that control in the Tab order. This will ensure that the access key (underlined character) you assign to the label will move focus to or activate the correct control when pressed.</para></listitem>
	
     
	<listitem><para>Label objects with names that make sense when taken out of context. Users relying on screenreaders or similar assistive technologies will not necessarily be able to immediately understand the relationship between a control and those surrounding it.</para></listitem>
	
	<listitem><para>When you use static text to label a control, end the label with a colon. For example, <guilabel>Email:</guilabel> to label a text field into which the user should type their email address. This helps identify it as a control's label rather than an independent item of text.</para></listitem>

	<listitem><para>Don't use the same label more than once in the same window. If you use the same label in different windows, it will help if it means the same thing in both windows. Also, don't use labels that are spelled differently but sound the same, e.g. &quot;Read&quot; and &quot;Red&quot;, as this could be confusing for users relying on screenreaders.</para></listitem>

	<listitem><para>Provide alternatives to WYSIWYG. Some users may need to print text in a small font but edit in a larger screen font, for example. Possible alternatives include displaying all text in the same font and size (both of which are chosen by the user); a &quot;wrap-to-window&quot; option that allows you to read all the text in a window without scrolling horizontally; a single column view that shows the window's contents in a single column even if they will be printed in multiple columns; and a text-only view, where graphics are shown as placeholders or text descriptions.</para></listitem>
      </itemizedlist>

      <sect2 id="layout-capitalization">
	
	<title>Capitalization</title>

	<para>Two different styles of capitalization are used in a GNOME user interface:</para>
	
	<orderedlist>
	  
	  <listitem><para>Book title capitalization (or "title caps") means capitalizing the first letter of the first and last words.  Also, capitalize all words inbetween, except:</para>
	  
	    <itemizedlist>
	      <listitem><para>Articles (a, an, the...)</para></listitem>
	      
	      <listitem><para>Conjunctions (and, but, for, not, so, yet...)</para></listitem>
	      
	      <listitem><para>Prepositions of four or fewer letters (at, for, with, into...)</para></listitem>
	  
	    </itemizedlist>
	    
	  </listitem>
	  
	  <listitem><para>Sentence-style capitalization (or "sentence caps") means capitalizing the first letter of the first word, and any other words normally capitalized in sentences, such as proper nouns.</para></listitem>
	
	</orderedlist>
	
	<para>The table below tells you what sort of capitalization to use for which user interface elements.</para><table frame='all'>
	  
	  <title>Capitalization styles for different UI elements</title>
	  <tgroup cols='3' align='left'>

	    <thead>
	      <row>
		<entry>Element</entry>
		<entry>Style</entry>
		<entry>Example</entry>
	      </row>

	    </thead>

	    <tbody>

	      <row>
		<entry>Alt (alternate) text on web pages</entry>
		<entry>Sentence</entry>
		<entry>Screenshot showing sample panel layout</entry>
	      </row>
	      <row>
		<entry>Button labels (except radio buttons)</entry>
		<entry>Title</entry>
		<entry>Find Now</entry>
	      </row>
	      <row>
		<entry>Checkbox labels</entry>
		<entry>Sentence</entry>
		<entry>Don't show this again</entry>
	      </row>
	      <row>
		<entry>Column headings</entry>
		<entry>Title</entry>
		<entry>File Type</entry>
	      </row>
	      <row>
		<entry>Filenames</entry>
		<entry>Sentence</entry>
		<entry>Untitled.txt</entry>
	      </row>
	      <row>
		<entry>Frame/group labels</entry>
		<entry>Sentence</entry>
		<entry>Desktop background</entry>
	      </row>
	      <row>
		<entry>Icon labels</entry>
		<entry>Title</entry>
		<entry>Time Tracking Tool</entry>
	      </row>
	      <row>
		<entry>List entries</entry>
		<entry>Sentence</entry>
		<entry>Copy to next workspace</entry>
	      </row>
	      <row>
		<entry>Menu titles and menu items</entry>
		<entry>Title</entry>
		<entry>Save As...</entry>
	      </row>
	      <row>
		<entry>Messages</entry>
		<entry>Sentence</entry>
		<entry>No matches found.</entry>
	      </row>
	      <row>
		<entry>Radio button labels</entry>
		<entry>Sentence</entry>
		<entry>Embossed logo</entry>
	      </row>
	      <row>
		<entry>Status bar text</entry>
		<entry>Sentence</entry>
		<entry>File download complete</entry>
	      </row>
	      <row>
		<entry>Tab titles (notebooks)</entry>
		<entry>Title</entry>
		<entry>Panel Objects</entry>
	      </row>
	      <row>
		<entry>Text box labels</entry>
		<entry>Sentence</entry>
		<entry>First name:</entry>
	      </row>
	      <row>
		<entry>Titlebar text</entry>
		<entry>Title</entry>
		<entry>Text Properties</entry>
	      </row>
	      <row>
		<entry>Toolbar button labels</entry>
		<entry>Title</entry>
		<entry>Print Preview</entry>
	      </row>
	      <row>
		<entry>Tooltips - menu items</entry>
		<entry>Sentence</entry>
		<entry>Insert special characters into documents</entry>
	      </row>
	      <row>
		<entry>Tooltips - toolbar controls</entry>
		<entry>Title</entry>
		<entry>Save As</entry>
	      </row>
	      <row>
		<entry>Webpage titles and navigational elements</entry>
		<entry>Title</entry>
		<entry>Return to Homepage</entry>
	      </row>
	    </tbody>
	  </tgroup>
	</table>


      </sect2>


    </sect1>
    
    <sect1 id="color-and-contrast">
      <title>Color and Contrast</title>

      <para>Poor choice of colors on the screen can cause problems for users with color blindness (for whom hue is important) or low-vision (for whom brightness/contrast is important). For example, some users require a high level of contrast between the background and text colors&mdash; black on white, white on black, or some other high-contrast combination. Others can experience discomfort unless they use low contrast settings, such as gray text on a lighter gray background.</para>

      <para>Colorblindness alone affects an estimated 2% of all females, and 9% of all males.  You must therefore allow the user to customize the colors in any part of your application that conveys important information.  Normally, this means you should only use colors that are part of the user's chosen theme.  If you have to use any extra colors, they must be customizable in your application's <guilabel>Preferences</guilabel> dialog.</para>
      
      <figure id="redundant-color-example"> 
	<title>The red-on-black part of this display causes problems for users who have difficulty distinguishing contrast. Its use of color alone to distinguish different types of information can also cause problems for those with colorblindness.</title>
	<mediaobject>
	  <imageobject>
	    <imagedata fileref="images/colour_only.png" format="PNG"/>
	  </imageobject>
	  <textobject>
	    <phrase>Example showing changes in stock price using red and green figures on a black background</phrase>
	  </textobject>
	</mediaobject>
      </figure>
      
      <figure>
	<title>Color-coding reinforced with arrows to show stock price movement.  This version also uses darker shades of green and red on a lighter background to provide higher contrast.  This need not be the default colour scheme if testing were to show it to be too distracting for the majority of users, but it should be possible to customize it in this way either by theming or via the application's <guilabel>Preferences</guilabel> dialog.</title>
	<mediaobject>
	  <imageobject>
	    <imagedata fileref="images/colour_and_arrows.png" format="PNG"/>
	  </imageobject>
	  <textobject>
	    <phrase>Example showing changes in stock price using both color and arrows, on a white background</phrase>
	  </textobject>
	</mediaobject>
      </figure>
      
      <para>Design colored elements, such as icons, in black and white first, then add the color later.  If the design works in black and white, you can be fairly sure that the color you add will be redundant, and used only to reinforce the black and white design.  See <xref linkend="icons"/> for more information.</para>
      
      <para>Recommendations:</para>
      <itemizedlist>

	<listitem><para>Only use colors from the user's currently-selected theme in your application.  If for some reason you do need to use colors that are not available in the theme, make those colors customizable within your application's <guilabel>Preferences</guilabel> dialog.  Never hard-code application colors, as some users need to use particular combinations of colors and levels of contrast to be able to read the screen comfortably.</para></listitem>

	<listitem><para>Ensure your application is not dependent on a particular theme. Test it with different themes (including high contrast accessibility themes, which use fewer colors) to ensure your application respects the settings.</para></listitem>

	<listitem><para>Do not use color as the only means to distinguish items of information. All such information should be provided by at least one other method, such as shape, position or textual description. See <xref linkend="redundant-color-example"/> for an example.</para></listitem>

      <listitem><para>Support high contrast GNOME themes (when these become available). Ensure that when one of these themes is selected, all the text in your application appears in the high contrast foreground and background colors specified by the theme.</para></listitem>

	<listitem><para>When colours need to be distinct and recognizably different:</para>
	  <itemizedlist>
	    <listitem><para>select the light colors from orange, yellow, green or blue-green</para></listitem>
	    <listitem><para>select the darker colors from blue, violet, purple or red, as most colorblind people already see blue, violet, purple and red as darker than normal.</para></listitem>
	  </itemizedlist>
	</listitem>
      
      </itemizedlist>

    </sect1>
    
  </chapter>
